<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.manage.mapper.zhangfu.CertifiedOpenMapper">
	
	
	
	
	<resultMap id="BaseResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.task.CertifiedOpen">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="INTEGER" property="id" />
	</resultMap>


	<sql id="pageWhere">
		<where>
			<if test="status != null"> AND oa.status =#{status} </if>
			<if test="keys != null"> AND t.serial_num like '%${keys}%' </if>
		</where>
	</sql>
	<select id="findPageByKeys" resultMap="BaseResultMap">
		SELECT
		oa.id,oa.STATUS,DATE_FORMAT(oa.created_at,'%Y-%m-%d %H:%i:%s') created_at,
		t.serial_num,dct.name as credit,oa.pay_channel_id as pcid
		FROM opening_applies oa 
		LEFT JOIN terminals t ON oa.terminal_id = t.id
		LEFT JOIN merchants m on m.id=oa.merchant_id
   		LEFT JOIN dictionary_credit_types dct on dct.id=m.credit_type_id
		<include refid="pageWhere" />
		order by oa.preliminary_verify_user_id = #{id} desc,oa.created_at desc limit #{pageRequest.offset}, #{pageRequest.pageSize}
	</select>

	<select id="countByKeys" resultType="long">
		SELECT count(*) as count
		FROM opening_applies oa LEFT JOIN terminals t ON oa.terminal_id = t.id
		<include refid="pageWhere" />
	</select>
	<!-- 分页result end -->


	<resultMap id="ResultInfoMap" type="com.comdosoft.financial.manage.domain.zhangfu.task.Showinfo">
	</resultMap>
	<select id="findInfo" resultMap="ResultInfoMap">
		SELECT
		oa.id,
		oa.merchant_id,oa.merchant_name,oa.card_id,oa.types,oa.phone as mphone,
		t.id as tid, t.serial_num,
		oa. STATUS,
		IFNULL(tt.status,0) as video_status,
		t.STATUS as tstatus,
		gb.name as good_brand,
		g.Model_number as model_number,
		pc.name as pcname,
		a.company_name as aname,
		c1.name as cname,
		c1.phone,
		c1.email,
    	c2.name as c2name,
		dbc.name as dbcname,dct.name as credit
		FROM
		opening_applies oa
		LEFT JOIN terminals t ON oa.terminal_id = t.id
		LEFT JOIN goods g on t.good_id=g.id
		LEFT JOIN good_brands gb on g.good_brands_id=gb.id
		LEFT JOIN pay_channels pc on t.pay_channel_id=pc.id
		LEFT JOIN agents a on a.id=t.agent_id
		LEFT JOIN customers c1 on c1.id=t.customer_id
    	LEFT JOIN customers c2 on c2.id=oa.preliminary_verify_user_id
    	LEFT JOIN merchants m on m.id=oa.merchant_id
   		LEFT JOIN dictionary_credit_types dct on dct.id=m.credit_type_id
    	LEFT JOIN dictionary_billing_cycles dbc on dbc.id=oa.billing_cyde_id
    	LEFT JOIN (SELECT * from opening_video_verifies where opening_apply_id=#{id} LIMIT 0,1) tt on tt.opening_apply_id=oa.id
		where oa.id=#{id}


	</select>


	<select id="videoStatus" resultType="int">
			SELECT status from opening_video_verifies where opening_apply_id=#{id} LIMIT 0,1
	</select>
	
	
	
	<select id="isNeedOpen" resultType="int">
			SELECT COUNT(*) FROM opening_requirements WHERE pay_channel_id=#{pcid} AND has_video_verify>0
	</select>

	<resultMap id="ResultInfo2Map" type="com.comdosoft.financial.manage.domain.zhangfu.task.Opendetailsinfo">
	</resultMap>
	<select id="getOpeningDetails" resultMap="ResultInfo2Map">
		SELECT toi.key,toi.value,toi.types
		FROM 
		opening_applies oa 
		LEFT JOIN terminal_opening_infos toi ON
		oa.id=toi.opening_applies_id
		where oa.id=#{id}
	</select>
	
	<resultMap id="ResultInfo3Map" type="com.comdosoft.financial.manage.domain.zhangfu.task.Mark">
	</resultMap>
	<select id="getMark" resultMap="ResultInfo3Map">
		SELECT DATE_FORMAT(s.created_at,'%Y-%m-%d %H:%i:%s') created_at,s.content,c.name
		FROM opening_applies oa 
		JOIN opening_apply_marks s ON oa.id=s.opening_apply_id
		LEFT JOIN customers c ON s.custom_id=c.id
		where oa.id=#{id} order by s.created_at desc
	</select>
	
	<insert id="addMark" useGeneratedKeys="true" keyProperty="id">
		insert into opening_apply_marks(opening_apply_id,custom_id,content,created_at) 
		VALUES(#{applyid},#{cusid},#{content},NOW())
	</insert>
	
	<update id="upStatus">
		update opening_applies set status=#{status} where id=#{id}
	</update>
	
	<update id="upVstatus">
		update opening_video_verifies set status=#{status} where opening_apply_id=#{id}
	</update>
	
	<insert id="inVstatus">
		insert into opening_video_verifies(status,opening_apply_id) 
		VALUES(#{status},#{id})
	</insert>
	
	<update id="upMstatus">
		update merchants set credit_type_id=#{status} where id=#{id}
	</update>
	
	<update id="dispatch">
      update opening_applies set preliminary_verify_user_id = #{customerId} where id in 
      <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">#{item}</foreach>  
  </update>

</mapper>