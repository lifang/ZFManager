<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.manage.mapper.zhangfu.OutStoreMapper">
<resultMap id="BaseResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.task.OutStore">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="process_user_id" jdbcType="INTEGER" property="processUserId" />
    <result column="process_user_name" jdbcType="VARCHAR" property="processUserName" />
    <result column="statsus" jdbcType="VARCHAR" property="status" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="created_at" jdbcType="INTEGER" property="createdAt" />
    <result column="updated_at" jdbcType="VARCHAR" property="updatedAt" />
    <result column="cs_apply_id" jdbcType="INTEGER" property="csApplyTypes" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="cs_apply_id" jdbcType="INTEGER" property="csApplyTypes" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
  </resultMap>
  
<resultMap id="GoodsMap" type="com.comdosoft.financial.manage.domain.zhangfu.task.Good">
   <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="brandId" jdbcType="INTEGER" property="brandId" />
    <result column="brandName" jdbcType="VARCHAR" property="brandName" />
    <result column="modelNum" jdbcType="VARCHAR" property="modelNum" />
    <result column="urlPath" jdbcType="VARCHAR" property="urlPath" />
    <result column="payChannelId" jdbcType="INTEGER" property="payChannelId" />
    <result column="payChannelName" jdbcType="VARCHAR" property="payChannelName" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
  </resultMap>






	<sql id="pageWhere">
		<where>
			<if test="status != null"> AND status =#{status} </if>
			<if test="keys != null"> AND (title like #{keys} or second_title like #{keys} or
				key_worlds like #{keys}) </if>
		</where>
	</sql>
	<select id="findPageOutStoresByKeys" resultMap="BaseResultMap">
		select a.id,a.created_at,a.order_id,a.status from cs_out_storages a 
		where 1=1 order by a.created_at desc limit #{pageRequest.offset}, #{pageRequest.pageSize}
		
		<!-- 	<include refid="pageWhere" /> -->
	</select>
	
	<select id="countByKeys" resultType="long">
		SELECT count(a.id) as count
		FROM cs_out_storages a
		<!-- 	<include refid="pageWhere" />-->
	</select>
	
	<select id="findOutStoreInfo" resultMap="BaseResultMap">
		SELECT count(a.id) as count
		FROM cs_out_storages a
		<!-- 	<include refid="pageWhere" />-->
	</select>
	
	<select id="getGoodInfoInit" resultMap="GoodsMap">
		select a.pay_channel_id as payChannelId,(select name from pay_channels where id=a.pay_channel_id) as payChannelName,a.quantity,
		b.title,b.model_number as modelNum,b.good_brands_id as brandId,(select name from good_brands where id=b.good_brands_id) as brandName,b.id,
		(select c.url_path from (select good_id,url_path from goods_pictures group by good_id) c where c.good_id=b.id)as urlPath
		 from order_goods a 
		left join goods b on a.good_id=b.id where a.order_id=#{id}
	</select>
	
	<select id="getAddressInit" resultType="java.lang.String">
		select a.address from customer_addresses a where a.id=
		(select b.customer_address_id from orders b where b.id=
		(select c.order_id from cs_out_storages c where c.id=#{id} ))
	</select>

</mapper>