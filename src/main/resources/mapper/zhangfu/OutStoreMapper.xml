<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.manage.mapper.zhangfu.OutStoreMapper">
<resultMap id="BaseResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.OutStore">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="process_user_id" jdbcType="INTEGER" property="processUserId" />
    <result column="process_user_name" jdbcType="VARCHAR" property="processUserName" />
    <result column="statsus" jdbcType="VARCHAR" property="status" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="created_at" jdbcType="INTEGER" property="createdAt" />
    <result column="updated_at" jdbcType="VARCHAR" property="updatedAt" />
    <result column="cs_apply_id" jdbcType="INTEGER" property="csApplyTypes" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="cs_apply_id" jdbcType="INTEGER" property="csApplyTypes" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
  </resultMap>

	<sql id="pageWhere">
		<where>
			<if test="status != null"> AND status =#{status} </if>
			<if test="keys != null"> AND (title like #{keys} or second_title like #{keys} or
				key_worlds like #{keys}) </if>
		</where>
	</sql>
	<select id="findPageOutStoresByKeys" resultMap="BaseResultMap">
		select a.id,a.created_at,a.order_id,a.status from cs_out_storages a 
		where 1=1 order by a.created_at desc limit #{pageRequest.offset}, #{pageRequest.pageSize}
		
		<!-- 	<include refid="pageWhere" /> -->
	</select>
	
	<select id="countByKeys" resultType="long">
		SELECT count(a.id) as count
		FROM cs_out_storages a
		<!-- 	<include refid="pageWhere" />-->
	</select>


</mapper>